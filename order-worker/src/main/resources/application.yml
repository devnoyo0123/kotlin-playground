server:
  port: 8081

spring:
  application:
    name: kotlin-spring-kafka-sample

logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd'T'HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
  level:
    com.example.bookorder: DEBUG
    org:
      springframework:
        #        kafka: trace
        orm.jpa.JpaTransactionManager: trace
      hibernate.orm.jdbc.bind: trace
      hibernate.SQL: debug

payment:
  api:
    base-url: http://localhost:8088/api/

---
spring:
  config:
    activate:
      on-profile: local
  kafka:
    bootstrap-servers: localhost:9092,localhost:9093,localhost:9094
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: latest
      properties:
        spring.json.trusted.packages: "*"
        allow.auto.create.topic: false
    listener:
      concurrency: 1
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  datasource:
    url: jdbc:mysql://localhost:${SA_MYSQL_DB_PORT}/${SA_MYSQL_DB_NAME}?useSSL=false&serverTimezone=Asia/Seoul
    username: ${SA_MYSQL_DB_USERNAME}
    password: ${SA_MYSQL_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
#    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.MySQL8Dialect
        default_batch_fetch_size: 100
  flyway:
    baseline-on-migrate: ${BASELINE_ON_MIGRATE}

  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true

---
spring:
  config:
    activate:
      on-profile: test

  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers:localhost:9092}

  h2:
    console:
      enabled: true
  #      path: /h2-console

  jpa:
    hibernate:
      ddl-auto: create
    #    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.H2Dialect
#        default_batch_fetch_size: 100



