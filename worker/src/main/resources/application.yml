spring:
  application:
    name: kotlin-spring-kafka-sample

logging:
  pattern:
    console: "[%d{HH:mm:ss.SSS}[%-5level][%logger.%method:line%line] - %msg%n"
  level:
    org:
      springframework:
        #        kafka: trace
        orm.jpa.JpaTransactionManager: trace
      hibernate.orm.jdbc.bind: trace
      hibernate.SQL: debug

---
spring:
  config:
    activate:
      on-profile: local
  kafka:
    bootstrap-servers: kafka-00:19092,kafka-01:19093,kafka-02:19094
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: latest
      properties:
        spring.json.trusted.packages: "*"
        allow.auto.create.topic: false
    listener:
      concurrency: 1
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.MySQL8Dialect
        default_batch_fetch_size: 100
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true
---
spring:
  config:
    activate:
      on-profile: test

  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers:localhost:9092}

  h2:
    console:
      enabled: true
  #      path: /h2-console

  jpa:
    hibernate:
      ddl-auto: create
    #    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.H2Dialect
#        default_batch_fetch_size: 100



